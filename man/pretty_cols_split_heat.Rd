% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pretty_cols.R
\name{pretty_cols_split_heat}
\alias{pretty_cols_split_heat}
\title{Create the `split-heat' colour scheme}
\usage{
pretty_cols_split_heat(
  zlim,
  split = 0,
  scheme_cold = "Blues",
  scheme_hot = "Reds",
  select_cold = 1:8,
  select_hot = 1:8,
  n_breaks = 100
)
}
\arguments{
\item{zlim}{A numeric range that the colour scheme should span.}

\item{split}{A number that divides the colour scheme. The default is \code{split = 0}, which splits the colour scheme around 0.}

\item{scheme_cold}{A character that defines the colour scheme for numbers below \code{split} (e.g., negative numbers), supported by \code{\link[RColorBrewer]{brewer.pal}}.}

\item{scheme_hot}{A character that defines the colour scheme for numbers above \code{split} (e.g., positive numbers), supported by \code{\link[RColorBrewer]{brewer.pal}}.}

\item{select_cold, select_hot}{Integer vectors that define which colours to draw from \code{scheme_cold} and \code{scheme_cold} respectively.}

\item{n_breaks}{The number of breaks in the colour scheme.}
}
\value{
The function returns a named list that contains the z limits (`zlim'), a numeric vector of breaks (`breaks') and the associated vector of colours (`col'). This can be passed to \code{\link[fields]{image.plot}}.
}
\description{
This function creates the `split-heat' colour scheme. For a user-defined range (\code{zlim}) that spans a `splitting' value (i.e., \code{split = 0}), the function returns a dichotomous vector of colours that distinguishes values either side of that value. By default, blue colours are returned for values below \code{split} (e.g., negative numbers) and red colours are returned for values above \code{split} (e.g., positive numbers).
}
\details{
This function is designed to work in conjunction with \code{\link[fields]{image.plot}}.
}
\examples{
# Generate a raster with positive and negative numbers
nrw <- ncol <- 5
n <- nrw * ncol
zlim <- c(-0.1, 0.1)
m <- matrix(runif(n, zlim[1], zlim[2]), nrow = nrw, ncol = ncol)
r <- raster::raster(m)
# Define colours
col_param <- pretty_cols_split_heat(zlim = zlim, n_breaks = 100)
# Visualise raster with colour scheme
fields::image.plot(r,
                   zlim = col_param$zlim,
                   breaks = col_param$breaks,
                   col = col_param$col)
}
\seealso{
\code{\link[prettyGraphics]{pretty_cols_brewer}}
}
\author{
Edward Lavender
}
